name: PyTest CI
description: 'Tests a Python application using PyTest and flake8'

inputs:
  python_version:
    description: 'The Python version that the code will be tested with'
    required: true
  
runs:
  using: 'composite'
  steps:
  - name: Set up Python
    uses: actions/setup-python@v3
    with:
      python-version: ${{ inputs.python_version }}

  - name: Install dependencies
    shell: bash
    run: |
      python3 -m venv .venv
      .venv/bin/python -m pip install --upgrade pip
      .venv/bin/pip install flake8 pytest pytest-cov mypy flake8-bugbear

  - name: Format code with Black
    uses: psf/black@stable
    with:
      options: "--check --verbose"
      src: "./src/python_app"

  - name: Lint with flake8
    shell: bash
    # with below, flake8 will run on ALL directories within src/python_app
    # to exclude directories, edit pyproject.toml
    run: |
      # stop the build if there are Python syntax errors or undefined names
      .venv/bin/python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      .venv/bin/python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  - name: Test with pytest
    shell: bash
    run: |
      source .venv/bin/activate
      python3 -m pytest --cov

  - name: Check Python typing with mypy
    shell: bash
    run: |
      source .venv/bin/activate
      python3 -m mypy src